# Application Name
spring.application.name=User-service

# Main Server Port (for your app)
server.port=8085

# Database Configuration (using container name inside Docker)
spring.datasource.url=jdbc:postgresql://postgres:5432/user_service
spring.datasource.username=${POSTGRES_USER}
spring.datasource.password=${POSTGRES_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA Properties
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# JWT Configuration
jwt.expirationMs=${JWT_EXPIRATION_MS}
jwt.secret=${JWT_SECRET}
jwt.refreshExpirationMs=${JWT_REFRESH_EXPIRATION_MS}

# Email Service Configuration
email.service.url=http://51.20.82.221:8080/api/email/send
email.service.api-key=${API_KEY}

# Logging
logging.level.org.springframework.security=INFO
logging.level.org.springframework=INFO

# Redis Configuration (using container name inside Docker)
spring.data.redis.host=redis
spring.data.redis.port=6379
spring.data.redis.timeout=6000

# SMTP Settings
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${EMAIL_USERNAME}
spring.mail.password=${EMAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.default-encoding=UTF-8

# Actuator Configuration - on the same port as the main server
management.server.port=8085
management.server.base-path=/actuator
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

# Application Info (exposed via /actuator/info)
info.app.name=User Service
info.app.description=User Service with Actuator
info.app.version=1.0.0
info.app.author=Doluwamu Kuye