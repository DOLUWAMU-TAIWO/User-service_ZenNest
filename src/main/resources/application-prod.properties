# Application Name
spring.application.name=User-service

# Main Server Port (for your app)
server.port=8085

# Database Configuration (using container name inside Docker)
spring.datasource.url=jdbc:postgresql://postgres:5432/user_service
spring.datasource.username=${POSTGRES_USER}
spring.datasource.password=${POSTGRES_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA Properties
spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# JWT Configuration
jwt.expirationMs=${JWT_EXPIRATION_MS}
jwt.secret=${JWT_SECRET}
jwt.refreshExpirationMs=${JWT_REFRESH_EXPIRATION_MS}
spring.security.user.password=${SERVICE_PASSWORD}

# Email Service Configuration
email.service.url=${MESSAGING_SERVICE_URL}
email.service.api-key=${API_KEY}

# OAuth2 Redirect URI (production)
oauth2.success.redirect-url=${OAUTH2_SUCCESS_REDIRECT_URL}

# Logging
logging.level.org.springframework.security=INFO
logging.level.org.springframework=INFO

#FLYWAY
spring.flyway.url=jdbc:postgresql://postgres:5432/user_service

spring.flyway.user=${SPRING_DATASOURCE_USERNAME}
spring.flyway.password=${SPRING_DATASOURCE_PASSWORD}
spring.flyway.locations=classpath:db/migration
spring.flyway.baseline-on-migrate=true
spring.flyway.out-of-order=true

# Redis Configuration (using container name inside Docker)
spring.data.redis.host=redis
spring.data.redis.port=6379
spring.data.redis.timeout=6000
logging.level.org.springframework.data.redis=DEBUG
logging.level.io.lettuce.core=DEBUG
spring.graphql.graphiql.enabled=true
spring.graphql.path=/graphql

# SMTP Settings
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${EMAIL_USERNAME}
spring.mail.password=${EMAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.default-encoding=UTF-8
verification.url.prefix=${VERIFICATION_URL_PREFIX}
# Actuator Configuration - on the same port as the main server
management.server.port=8085
management.server.base-path=/actuator

management.endpoint.health.show-details=always
# application.properties
management.endpoints.web.exposure.include=health,info,prometheus
management.endpoint.prometheus.enabled=true
management.prometheus.metrics.export.enabled=true

#oauth2
# GitHub OAuth2
spring.security.oauth2.client.registration.github.client-id=${GITHUB_CLIENT_ID}
spring.security.oauth2.client.registration.github.client-secret=${GITHUB_CLIENT_SECRET}
spring.security.oauth2.client.registration.github.scope=user:email
spring.security.oauth2.client.registration.github.redirect-uri=${GITHUB_REDIRECT_URI}
spring.security.oauth2.client.registration.github.client-name=GitHub

spring.security.oauth2.client.provider.github.authorization-uri=https://github.com/login/oauth/authorize
spring.security.oauth2.client.provider.github.token-uri=https://github.com/login/oauth/access_token
spring.security.oauth2.client.provider.github.user-info-uri=https://api.github.com/user
spring.security.oauth2.client.provider.github.user-name-attribute=login

# Google OAuth2
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=email,profile
spring.security.oauth2.client.registration.google.redirect-uri=${GOOGLE_REDIRECT_URI}
spring.security.oauth2.client.registration.google.client-name=Google

spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/v2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://openidconnect.googleapis.com/v1/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=sub



# Application Info (exposed via /actuator/info)
info.app.name=User Service
info.app.description=User Service with Actuator
info.app.version=1.0.0
info.app.author=Doluwamu Kuye

logging.level.org.springframework.web.filter.CorsFilter=DEBUG
logging.level.org.springframework.security.web.firewall=DEBUG
logging.level.org.springframework.security.=TRACE
# application-prod.properties
logging.level.root=INFO
logging.level.dev.dolu.userservice=DEBUG
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n