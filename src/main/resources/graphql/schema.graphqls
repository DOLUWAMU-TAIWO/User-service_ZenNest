scalar LocalDateTime

enum Role {
    USER
    ADMIN
    TENANT
    LANDLORD
}

enum UserIntention {
    BUY
    SELL
    RENT
    LEASE
    RENT_OUT
    SHORTLET
}

enum OnboardingFeature {
    VERIFY_EMAIL
    VERIFY_PHONE
    COMPLETE_PROFILE
    CREATE_FIRST_LISTING
    SET_AVAILABLE_DATES
    SET_PREFERRED_LANGUAGE
    SET_PREFERRED_CURRENCY
    SET_NOTIFICATION_PREFERENCES
    SET_AVAILABLE_SLOTS
    ADD_PAYMENT_METHOD
    COMPLETE_PAYMENT_SETUP
    CREATE_FIRST_LEASE
    FEEDBACK_SURVEY
}

type PayoutInfo {
    accountNumber: String
    bankCode: String
    bankName: String
    accountHolderName: String
    recipientCode: String
    bvn: String
    emailForPayouts: String
    verified: Boolean
    lastUpdated: LocalDateTime
    currency: String
}

type User {
    id: ID!
    firstName: String
    lastName: String
    username: String
    phoneNumber: String
    email: String!
    password: String!
    profession: String
    city: String
    country: String
    dateOfBirth: String
    role: Role!
    enabled: Boolean!
    verified: Boolean!
    authProvider: String!
    profileImage: String
    activePlan: String
    createdAt: LocalDateTime
    updatedAt: LocalDateTime
    lastLogin: LocalDateTime
    profileCompleted: Boolean!
    onboardingCompleted: Boolean!
    subscriptionPlan: String
    subscriptionActive: Boolean!
    intention: UserIntention
    profileDescription: String
    profilePicture: String
    favourites: [ID]
    payoutInfo: PayoutInfo
    totalEarnings: Float!
    openVisitations: Boolean!
    paymentVerified: Boolean!
    completedFeatures: [OnboardingFeature!]!

    # ADD THESE NOTIFICATION SETTINGS
    emailNotificationsEnabled: Boolean
    smsNotificationsEnabled: Boolean
    pushNotificationsEnabled: Boolean

    # ADD THESE LANDLORD SETTINGS
    visitDuration: String
    autoAcceptBooking: Boolean
    autoAcceptVisitation: Boolean
    bufferTimeHours: Int

    # ADD THESE TENANT SETTINGS
    searchRadius: Int
    priceAlerts: Boolean
    newListingAlerts: Boolean
    visitReminders: Boolean
    autoSaveSearches: Boolean
    maxBudget: Float
    preferredPropertyTypes: [String]
    preferredAmenities: [String]
}

type Query {
    getUserById(id: ID!): User
    getUserByEmail(email: String!): User
    getAllUsers: [User]
    searchUsers(query: String!): [User]
    getUsersByRole(role: Role!): [User]
    getUsersByCity(city: String!): [User]
    getUsersByCountry(country: String!): [User]
    getRecentUsers: [User]
    countUsers: Int
    getCompletedOnboardingFeatures(userId: ID!): [OnboardingFeature!]!
}

type Mutation {
    createUser(
        email: String!
        password: String!
        role: Role!
        username: String
        firstName: String
        lastName: String
        phoneNumber: String
        dateOfBirth: String
        profession: String
        city: String
        country: String
        enabled: Boolean
        intention: UserIntention
        profileDescription: String
        profilePicture: String
        favourites: [ID]
    ): User

    updateUser(
        id: ID!
        email: String
        password: String
        username: String
        firstName: String
        lastName: String
        phoneNumber: String
        dateOfBirth: String
        profession: String
        city: String
        country: String
        role: Role
        enabled: Boolean
        profileCompleted: Boolean
        onboardingCompleted: Boolean
        subscriptionPlan: String
        subscriptionActive: Boolean
        intention: UserIntention
        profileDescription: String
        profilePicture: String
        favourites: [ID]
    ): User

    deleteUser(id: ID!): Boolean

    markProfileComplete(id: ID!): User
    markOnboardingComplete(id: ID!): User
    updateSubscription(id: ID!, plan: String!, active: Boolean!): User
    markOnboardingFeatureCompleted(userId: ID!, feature: OnboardingFeature!): [OnboardingFeature!]!
}